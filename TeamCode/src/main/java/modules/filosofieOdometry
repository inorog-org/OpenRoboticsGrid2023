 ALGORITM - Comunitate

     1. Aflam orientarea actuală a robotului - Heading-ul

     2. Calculăm diferența de unghi dintre orientarea anterioară și cea actuală

     3. Vom avea 2 cazuri pentru a calcula Poziția:
        - Cazul în care diferența de unghi e egală cu 0
        - Cazul în care diferența de unghi e diferită de 0

     4. Cazul în care diferența de unghi e egală cu 0
        - Practic robotul merge pe o traiectorie liniară
        - Principiul e același cu descompunerea forțelor la fizică

        - Vom lua distanța parcursă pe axa X și pe axa Y
        - Coorodnatele X și Y sunt relative față de poziția anterioară
        - Pentru 'a expune' deplasările de pe axele X și Y în sistemul Global de referință vom fi nevoiți să folosim o matrice de rotație
        - Vom roti coordonatele cu unghiul relativ față de teren - heading

              deltaX = x * cos(heading) - y * sin(heading);
              deltaY = x * sin(heading) + y * cos(heading);

     5. Cazul în care diferența de unghi e diferită de 0
        - Practic robotul merge pe o traiectorie curbilinie - arc de cerc


     6. Incrementăm Delta-urile de poziție
        currentPosition.x     += deltaX;
        currentPosition.y     += deltaY;

     7. Returnăm datele de Odometrie

ALGORITM - Vectorial

  1. Aflam orientarea actuală a robotului - Heading-ul

  2. Aflam Delta Central

  3. Aflam Delta Distance - Distanta perpendiculara pe Delta Central

  4. Calculam valorile pentru incrementare

          deltaX = deltaCentral * cos(deltaTheta) - deltaDistance * sin(deltaTheta);
          deltaY = deltaCentral * sin(deltaTheta) + deltaDistance * cos(deltaTheta);

  5. Incrementăm Delta-urile de poziție
          currentPosition.x     += deltaX;
          currentPosition.y     += deltaY;

       Position: currentPosition.x, currentPosition.y, currenPosition.theta; (BIFAT!)

       Inertials:

       - Velocity Axis: currentInertials.velX, currentInertials.velY, (BIFAT!)

       - Acceleration Axis: currentInertials.accX, currentInertials.accY, (BIFAT!)

       - Angle Inertials: currentInertials.velTheta, currentInertials.accTheta (BIFAT!)

       - Position Inertials: currentInertials.velocity, currentInertials.acceleration (BIFAT!)

